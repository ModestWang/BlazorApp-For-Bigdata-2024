@page "/chat/{index:int}"
@rendermode InteractiveServer

<div class="chat-container">
    <div class="output-box">
        <ul>
            @foreach (var message in inputMessages)
            {
                <li class="message-item @(message.Sender == "User" ? "user-message" : "other-message")">
                    @if (message.Sender == "Robot")
                    {
                        <img src="robot.png" class="icon" />
                    }
                    <span class="message-content">@message.Content</span>
                    @if (message.Sender == "User")
                    {
                        <img src="user.png" class="icon" />
                    }
                </li>
            }
        </ul>
    </div>
    <div class="input-box">
        <input @bind="inputMessage" placeholder="输入消息..." />
        <button @onclick="OnUserSendMessageButtonClicked"> 发送(User) </button>
    </div>

    <div class="input-box">
        <input @bind="inputMessage" placeholder="输入消息..." />
        <button @onclick="OnRobotSendMessageButtonClicked"> 发送(Robot) </button>
    </div>
</div>

<style>
    .chat-container {
        display: flex;
        flex-direction: column;
        height: 88vh;
    }

    .output-box {
        flex: 1;
        overflow-y: auto;
        padding: 10px;
        border: none;
    }

    .input-box {
        display: flex;
        height: 60px;
        padding: 0px;
        border-top: 1px solid #ccc;
    }

    .input-box input {
        flex: 1;
        padding: 6px;
        margin-top: 20px;
        margin-right: 8px;
        border-radius: 15px;
        border: 2px solid #ccc;
    }

    .input-box button {
        padding: 5px 30px;
        margin-top: 20px;
        border-radius: 15px;
        border: 1px solid #ccc;
        background-color: #007bff;
        color: white;
    }

    .input-box button:hover {
        background-color: #0056b3;
    }

    .message-item {
        display: flex;
        align-items: center;
        margin: 5px 0;
    }

    .user-message {
        justify-content: flex-end;
    }

    .other-message {
        justify-content: flex-start;
    }

    .message-content {
        background-color: #f1f0f0;
        padding: 10px;
        border-radius: 10px;
        margin: 0 10px;
    }

    .user-message .message-content {
        background-color: #dcf8c6;
    }

    .icon {
        width: 30px;
        height: 30px;
    }
</style>

@code {
    [Parameter]
    public int index { get; set; }

    private string inputMessage;
    private List<ChatMessage> inputMessages = new List<ChatMessage>();

    private void OnUserSendMessageButtonClicked()
    {
        if (!string.IsNullOrWhiteSpace(inputMessage))
        {
            inputMessages.Add(new ChatMessage { Content = inputMessage, Sender = "User" });
            inputMessage = string.Empty; // 清空输入框
        }
    }

    private void OnRobotSendMessageButtonClicked()
    {
        if (!string.IsNullOrWhiteSpace(inputMessage))
        {
            inputMessages.Add(new ChatMessage { Content = inputMessage, Sender = "Robot" });
            inputMessage = string.Empty; // 清空输入框
        }
    }
}
