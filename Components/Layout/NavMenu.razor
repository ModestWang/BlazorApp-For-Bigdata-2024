@rendermode InteractiveServer
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components.Web.Virtualization

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">心晴驿站</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        @* 动态生成聊天组件 *@
        @foreach (var chat in ChatManager.ChatManagerInstance.Chats)
        {
            var chatIndex = ChatManager.ChatManagerInstance.Chats.IndexOf(chat);
            var chatLink = $"chat/{chatIndex}";
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="@chatLink" style="position: relative;">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span>
                    @if (chat.IsEditing)
                    {
                        <input type="text" class="form-control" @bind="newChatName"
                            @onblur="() => OnRenameChatFinished(chatIndex, newChatName)"
                            @onkeydown="(e) => OnRenameKeyDown(e, chatIndex)" />
                    }
                    else
                    {
                        @chat.Name
                    }
                    <button class="btn btn-warning btn-sm"
                        style="position: absolute; right: 50px; background-color: #ffc107; border-color: #ffc107; padding: 0.25rem 0.5rem;"
                        @onclick="() => OnRenameChatButtonClicked(chatIndex, chat.Name ?? string.Empty)">
                        <img src="rename.png" alt="重命名" style="width: 16px; height: 16px;" />
                    </button>
                    <button class="btn btn-danger btn-sm"
                        style="position: absolute; right: 10px; background-color: #dc3545; border-color: #dc3545; padding: 0.25rem 0.5rem;"
                        @onclick="() => OnDeleteChatButtonClicked(chatIndex)">
                        <img src="trash.png" alt="删除" style="width: 16px; height: 16px;" />
                    </button>
                </NavLink>
            </div>
        }

        <div class="nav-item px-3 d-flex justify-content-center align-items-center">
            <Button class="btn create-btn btn-primary btn-sm w-100 d-flex align-items-center justify-content-center"
                @onclick="OnCreateChatButtonClicked">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span>
                <span class="ml-2">New Chat</span>
            </Button>
        </div>

    </nav>
</div>


<style>
    .nav-item {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .btn-danger {
        width: 36px;
        height: 36px;
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 50%;
    }

    .create-btn {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 100%;
        height: 50px;
    }

    .ml-2 {
        margin-left: 0.5rem;
    }
</style>

@code {
    private void OnCreateChatButtonClicked()
    {
        BlazorApp.ChatManager.ChatManagerInstance.CreateChat();
    }
    [Inject]
    private NavigationManager NavigationManager { get; set; }

    private void OnDeleteChatButtonClicked(int chatIndex)
    {
        ChatManager.ChatManagerInstance.Chats.RemoveAt(chatIndex);
        StateHasChanged();

        if (ChatManager.ChatManagerInstance.Chats.Count == 0)
        {
            // 导航到主页
            NavigationManager.NavigateTo("/");
        }
        else
        {
            // 导航到前一个界面
            NavigationManager.NavigateTo($"chat/{chatIndex - 1}"); // 替换为实际的前一个界面路径
        }
    }
    private void OnRenameChatButtonClicked(int chatIndex, string currentName)
    {
        ChatManager.ChatManagerInstance.Chats[chatIndex].IsEditing = true;
        newChatName = currentName; // 初始化为当前名称
        StateHasChanged();
    }

    private void OnRenameChatFinished(int chatIndex, string newName)
    {
        if (!string.IsNullOrEmpty(newName))
        {
            ChatManager.ChatManagerInstance.Chats[chatIndex].Name = newName;
        }
        else
        {
            ChatManager.ChatManagerInstance.Chats[chatIndex].Name = "未命名";
        }
        ChatManager.ChatManagerInstance.Chats[chatIndex].IsEditing = false;
        StateHasChanged();
    }

    private string newChatName = "";

    private void OnRenameKeyDown(KeyboardEventArgs e, int chatIndex)
    {
        if (e.Key == "Enter")
        {
            OnRenameChatFinished(chatIndex, newChatName);
        }
    }
}
